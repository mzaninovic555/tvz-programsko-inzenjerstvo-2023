<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="hr.tvz.pios.modul.review.ReviewRepository">
  <resultMap id="reviewResultMap" type="hr.tvz.pios.modul.review.Review">
    <id     property="id"           column="id" />
    <result property="rating"       column="rating" />
    <result property="userId"       column="user_id" />
    <result property="componentId"  column="component_id" />
  </resultMap>

  <!-- SQL -->
  <sql id="reviewResultMapColumns">
    ${alias}id               ${columnPrefix}id,
    ${alias}rating           ${columnPrefix}rating,
    ${alias}component_id     ${columnPrefix}component_id,
    ${alias}user_id          ${columnPrefix}user_id
  </sql>

  <!-- SELECT -->
  <select id="getById" resultMap="reviewResultMap">
    select
    <include refid="reviewResultMapColumns">
      <property name="alias" value="r."/>
      <property name="columnPrefix" value=""/>
    </include>
    from REVIEWS r
      join components c on c.id = r.component_id
      join users u on u.id = r.user_id
    where r.id = #{id}
  </select>

  <select id="getByUserAndComponentId" resultMap="reviewResultMap">
    select
    <include refid="reviewResultMapColumns">
      <property name="alias" value="r."/>
      <property name="columnPrefix" value=""/>
    </include>
    from REVIEWS r
   where r.component_id = #{componentId}
     and r.user_id = #{userId}
  </select>

  <select id="getAllReviewedComponentsByUser" parameterType="Long" resultType="Long">
    SELECT component_id
      FROM reviews
     WHERE user_id = #{userId}
  </select>

  <select id="getRatingForComponent" resultType="Double" parameterType="Long">
    SELECT ROUND(AVG(r.rating), 1)
      FROM components c
           JOIN reviews r ON c.id = r.component_id
     WHERE c.id = #{componentId}
     GROUP BY c.id
  </select>

  <insert id="insert" parameterType="hr.tvz.pios.modul.review.Review">
    insert into REVIEWS (
      rating,
      component_id,
      user_id
    ) values (
      #{rating},
      #{componentId},
      #{userId}
    )
  </insert>

  <update id="updateById" parameterType="hr.tvz.pios.modul.review.Review">
    update REVIEWS
    set id = #{id},
        rating = #{rating},
        component_id = #{componentId},
        user_id = #{userId}
    where id = #{id}
  </update>

  <delete id="deleteById">
    delete from REVIEWS
    where id = #{id}
  </delete>

  <delete id="deleteByUserAndComponent" parameterType="Long">
    DELETE FROM reviews
     WHERE user_id = #{userId}
       AND component_id = #{componentId}
  </delete>
</mapper>
