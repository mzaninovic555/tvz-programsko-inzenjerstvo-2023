<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="hr.tvz.pios.model.review.ReviewRepository">
  <resultMap id="reviewResultMap" type="hr.tvz.pios.model.review.Review">
    <id     property="id"           column="id" />
    <result property="rating"       column="rating" />
    <result property="postId"       column="post_id" />
    <result property="userId"       column="user_id" />
  </resultMap>

  <!-- SQL -->
  <sql id="reviewResultMapColumns">
    ${alias}id               ${columnPrefix}id,
    ${alias}rating           ${columnPrefix}rating,
    ${alias}post_id          ${columnPrefix}post_id,
    ${alias}user_id          ${columnPrefix}user_id
  </sql>

  <!-- SELECT -->
  <select id="getById" resultMap="reviewResultMap">
    select
    <include refid="reviewResultMapColumns">
      <property name="alias" value=""/>
      <property name="columnPrefix" value=""/>
    </include>
    from REVIEWS
    where id = #{id}
  </select>

  <insert id="insert" parameterType="hr.tvz.pios.model.review.Review">
    insert into REVIEWS (
      id,
      rating,
      post_id,
      user_id
    ) values (
      #{id},
      #{rating},
      #{postId},
      #{userId}
    )
  </insert>

  <update id="updateById" parameterType="hr.tvz.pios.model.review.Review">
    update REVIEWS
    set id = #{id},
        rating = #{rating},
        post_id = #{postId},
        user_id = #{userId}
    where id = #{id}
  </update>

  <delete id="deleteById">
    delete from REVIEWS
    where id = #{id}
  </delete>
</mapper>