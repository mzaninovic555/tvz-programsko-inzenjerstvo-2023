<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="hr.tvz.pios.modul.component.ComponentRepository">
  <resultMap id="componentResultMap" type="hr.tvz.pios.modul.component.Component">
    <id     property="id"                column="id" />
    <result property="name"              column="name" />
    <result property="price"             column="price" />
    <result property="type"              column="type" />
    <result property="data"              column="data" />
    <result property="imageBase64"       column="imageBase64" />
    <result property="rating"            column="rating" />
    <result property="reviewCount"       column="review_count" />
    <association property="manufacturer" javaType="hr.tvz.pios.modul.manufacturer.Manufacturer"
                 resultMap="hr.tvz.pios.modul.manufacturer.ManufacturerRepository.ManufacturerResultMap"
                 columnPrefix="m_"/>
  </resultMap>

  <!-- SQL -->
  <sql id="componentResultMapColumns">
    ${alias}id                  ${columnPrefix}id,
    ${alias}name                ${columnPrefix}name,
    ${alias}price               ${columnPrefix}price,
    ${alias}type                ${columnPrefix}type,
    ${alias}data                ${columnPrefix}data,
    ${alias}image_base64        ${columnPrefix}imageBase64,
    ${alias}manufacturer_id     ${columnPrefix}manufacturer_id,
    (
        SELECT ROUND(AVG(r.rating), 1)
          FROM components c2
               LEFT JOIN reviews r on ${alias}id = r.component_id
         WHERE c2.id = ${alias}id
         GROUP BY c2.id
    ) ${columnPrefix}rating,
    (
        SELECT CASE WHEN COUNT(*) = 0 THEN NULL ELSE COUNT(*) END
          FROM reviews r2
         WHERE r2.component_id = ${alias}id
    ) ${columnPrefix}review_count
  </sql>

  <!-- SELECT -->
  <select id="getAllFiltered" resultMap="componentResultMap">
    select
    <include refid="componentResultMapColumns">
      <property name="alias" value="c."/>
      <property name="columnPrefix" value=""/>
    </include>,
    <include refid="hr.tvz.pios.modul.manufacturer.ManufacturerRepository.ManufacturerResultMapColumns">
      <property name="alias" value="m."/>
      <property name="columnPrefix" value="m_"/>
    </include>
    from COMPONENTS c
         join MANUFACTURERS m on c.manufacturer_id = m.id
    <where>
      <if test="name != null and name != ''">
        and lower(c.name) like concat('%', lower(#{name}), '%')
      </if>
      <if test="type != null">
        and c.type = #{type}
      </if>
      <if test="manufacturer != null and manufacturer != ''">
        and m.name = #{manufacturer}
      </if>
      <if test="minPrice != null and maxPrice != ''">
        and c.price between #{minPrice} and #{maxPrice}
      </if>
    </where>
  </select>

  <select id="getById" resultMap="componentResultMap">
    select
    <include refid="componentResultMapColumns">
      <property name="alias" value="c."/>
      <property name="columnPrefix" value=""/>
    </include>,
    <include refid="hr.tvz.pios.modul.manufacturer.ManufacturerRepository.ManufacturerResultMapColumns">
      <property name="alias" value="m."/>
      <property name="columnPrefix" value="m_"/>
    </include>
    from COMPONENTS c
      join MANUFACTURERS m on c.manufacturer_id = m.id
    where c.id = #{id}
  </select>

  <select id="getByType" resultMap="componentResultMap">
    select
    <include refid="componentResultMapColumns">
      <property name="alias" value="c."/>
      <property name="columnPrefix" value=""/>
    </include>,
    <include refid="hr.tvz.pios.modul.manufacturer.ManufacturerRepository.ManufacturerResultMapColumns">
      <property name="alias" value="m."/>
      <property name="columnPrefix" value="m_"/>
    </include>
    from COMPONENTS c
      join MANUFACTURERS m on c.manufacturer_id = m.id
    where c.type = #{type}
  </select>

  <select id="getTopRated" resultMap="componentResultMap">
    select
    <include refid="componentResultMapColumns">
      <property name="alias" value="c."/>
      <property name="columnPrefix" value=""/>
    </include>,
    <include refid="hr.tvz.pios.modul.manufacturer.ManufacturerRepository.ManufacturerResultMapColumns">
      <property name="alias" value="m."/>
      <property name="columnPrefix" value="m_"/>
    </include>
    from COMPONENTS c
         join MANUFACTURERS m on c.manufacturer_id = m.id
         left join REVIEWS r on r.id = r.component_id
    group by c.id, m.id
--     me and the boys doing some basic sorting in sql ðŸ˜Ž
    order by case when (
      select count(*)
        from REVIEWS r2
       where r2.component_id = c.id
    ) = 0 then 1 else 0 end asc,
    (
      select round(avg(r.rating), 1)
        from COMPONENTS c2
             left join REVIEWS r on c.id = r.component_id
       where c2.id = c.id group by c2.id
    ) desc
    limit 6
  </select>

  <insert id="insert" parameterType="hr.tvz.pios.modul.component.Component">
    insert into COMPONENTS (
      name,
      price,
      type,
      data,
      image_base64,
      manufacturer_id
    ) values (
      #{name},
      #{price},
      #{type},
      #{data},
      #{imageBase64},
      #{manufacturer.id}
    )
  </insert>

  <update id="updateById" parameterType="hr.tvz.pios.modul.component.Component">
    update COMPONENTS
    set id = #{id},
        name = #{name},
        price = #{price},
        type = #{type},
        data = #{data},
        image_base64 = #{imageBase64},
        manufacturer_id = #{manufacturer.id}
    where id = #{id}
  </update>

  <delete id="deleteById">
    delete from COMPONENTS
    where id = #{id}
  </delete>
</mapper>
